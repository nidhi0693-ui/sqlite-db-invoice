{"version":3,"sources":["webpack:///./src/app/products/add-product/add-product.module.ts","webpack:///./src/app/products/add-product/add-product.page.html","webpack:///./src/app/products/add-product/add-product.page.scss","webpack:///./src/app/products/add-product/add-product.page.ts"],"names":[],"mappings":"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","file":"products-add-product-add-product-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddProductPage } from './add-product.page';\n\nimport { ReactiveFormsModule } from '@angular/forms';\n\n// For Material\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddProductPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule, \n    MatFormFieldModule, \n    MatInputModule\n  ],\n  declarations: [AddProductPage]\n})\nexport class AddProductPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button mode=\\\"md\\\" defaultHref=\\\"products\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Add Product</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <form [formGroup]=\\\"addProductForm\\\" (ngSubmit)=\\\"onAddProduct()\\\">\\n\\n      <mat-form-field class=\\\"full-width\\\">\\n          <input matInput type=\\\"text\\\" placeholder=\\\"Product Name\\\" formControlName=\\\"name\\\" required>\\n          <mat-error *ngFor=\\\"let validation of form_validation_messages.name\\\">\\n            <mat-error class=\\\"error-message\\\" *ngIf=\\\"addProductForm.get('name').hasError(validation.type) && (addProductForm.get('name').dirty || addProductForm.get('name').touched)\\\">{{validation.message}}</mat-error>\\n          </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"full-width\\\">\\n          <input matInput type=\\\"text\\\" placeholder=\\\"Price\\\" formControlName=\\\"price\\\" required>\\n          <mat-error *ngFor=\\\"let validation of form_validation_messages.price\\\">\\n            <mat-error class=\\\"error-message\\\" *ngIf=\\\"addProductForm.get('price').hasError(validation.type) && (addProductForm.get('price').dirty || addProductForm.get('price').touched)\\\">{{validation.message}}</mat-error>\\n          </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"full-width\\\">\\n          <input matInput type=\\\"text\\\" placeholder=\\\"Tax\\\" formControlName=\\\"tax\\\" required>\\n          <mat-error *ngFor=\\\"let validation of form_validation_messages.tax\\\">\\n            <mat-error class=\\\"error-message\\\" *ngIf=\\\"addProductForm.get('tax').hasError(validation.type) && (addProductForm.get('tax').dirty || addProductForm.get('tax').touched)\\\">{{validation.message}}</mat-error>\\n          </mat-error>\\n      </mat-form-field>\\n\\n    <ion-button color=\\\"secondary\\\" margin-top expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"addProductForm.invalid\\\">Add Product Info</ion-button>\\n  </form>\\n</ion-content>\\n\"","module.exports = \"form {\\n  display: flex;\\n  flex-direction: column; }\\n\\n.full-width {\\n  width: 100%; }\\n\\n.error-msg {\\n  color: red;\\n  display: block;\\n  position: absolute;\\n  font-size: 75%;\\n  bottom: -2em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kaGlyZW5kcmEvRGVza3RvcC9ERVYvdW52aXJlZC9zcWxpdGUtZGItaW52b2ljZS9zcmMvYXBwL3Byb2R1Y3RzL2FkZC1wcm9kdWN0L2FkZC1wcm9kdWN0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQWE7RUFDYixzQkFBc0IsRUFBQTs7QUFHMUI7RUFDSSxXQUFXLEVBQUE7O0FBR2Y7RUFDSSxVQUFVO0VBQ1YsY0FBYztFQUNkLGtCQUFrQjtFQUNsQixjQUFjO0VBQ2QsWUFBWSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcHJvZHVjdHMvYWRkLXByb2R1Y3QvYWRkLXByb2R1Y3QucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4uZnVsbC13aWR0aCB7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbi5lcnJvci1tc2cge1xuICAgIGNvbG9yOiByZWQ7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGZvbnQtc2l6ZTogNzUlO1xuICAgIGJvdHRvbTogLTJlbTtcbn1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { DatabaseProviderService } from '../../services/database-provider.service';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.page.html',\n  styleUrls: ['./add-product.page.scss'],\n})\nexport class AddProductPage implements OnInit {\n\n  addProductForm: FormGroup;\n\n  form_validation_messages = {\n    'name': [\n      { type: 'required', message: 'Name is required' },\n      { type: 'pattern', message: 'Only alphabet allowed. Minimum 3 letters.' },\n      { type: 'minlength', message: 'Minimum 3 letters.' }\n    ],\n    'price': [\n      { type: 'required', message: 'Price is required' },\n      { type: 'pattern', message: 'Only numbers are allowed.' },\n      { type: 'minlength', message: 'Price cannot be empty.' }\n    ],\n    'tax': [ // TODO: Valid values are 0 <= Tax <= 100\n      { type: 'required', message: 'Tax is required (0 to 100 allowed)' },\n      // { type: 'taxRangeValidator', message: 'Only numbers are allowed.' },\n      // { type: 'minlength', message: 'Tax cannot be empty.' }\n    ]\n  }\n\n  constructor(\n    private _DB: DatabaseProviderService,\n    private _FB: FormBuilder, \n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.addProductForm = this._FB.group({\n      name: ['', Validators.compose([\n        // Validators.pattern(\"^[a-zA-z]+([\\s][a-zA-Z]+)*$\"),\n        // Validators.pattern(\"^([a-zA-Z])+(\\s)+[a-zA-Z]+$\"),\n        // Validators.pattern(\"[a-zA-Z]+([\\s][a-zA-Z]+)*\"),\n        Validators.required,\n        Validators.pattern(\"^([a-zA-Z]+([a-zA-Z]+)*)(\\s([a-zA-Z]+([a-zA-Z]+)*))*$\"),\n        Validators.minLength(3)\n      ])],\n      price: ['', Validators.compose([\n        Validators.required,\n        Validators.pattern('^([0-9]*[1-9][0-9]*(\\.[0-9]+)?|[0]+\\.[0-9]*[1-9][0-9]*)$'),\n        Validators.minLength(1)\n      ])],\n      tax: ['', Validators.compose([\n        // Validators.pattern('^\\d{1,2}((,|.)\\d{1,3})?$'), \n        Validators.required,\n        this.taxRangeValidator,  \n        Validators.minLength(1)\n      ])]\n    })\n  }\n\n  // Add Product Information\n  async onAddProduct() {\n    if(this.addProductForm.valid) {\n      let formData = this.addProductForm.value;\n      formData.id = this.generateRandomID()\n      await this._DB.createProduct(formData.id, formData.name, parseFloat(formData.price), parseFloat(formData.tax))\n        .then(() => {\n          this.addProductForm.reset();          \n          this._router.navigate(['/products'])\n          this._DB.exportAsJSON()\n            .then((data) => console.log(\"Exported in JSON: \", data))\n        }).catch(e => console.log(e))\n    }\n  } \n\n  // Generate A Unique ID\n  generateRandomID() {\n    let data = Math.random();\n    let id = data.toString(16).substring(2, 8)\n    return id;\n  }\n\n  // Custom Validators for numbers ranges from 0 to 100 including boundaries\n  taxRangeValidator(control: AbstractControl): { [key: string]: boolean } | null {\n    if (control.value !== undefined && (isNaN(control.value) || control.value < 0 || control.value > 100)) {\n        return { 'taxRange': true };\n    }\n    return null;\n  } \n\n}\n"],"sourceRoot":""}