{"version":3,"sources":["webpack:///./src/app/products/products.module.ts","webpack:///./src/app/products/products.page.html","webpack:///./src/app/products/products.page.scss","webpack:///./src/app/products/products.page.ts"],"names":[],"mappings":"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","file":"products-products-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProductsPage } from './products.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProductsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ProductsPage]\n})\nexport class ProductsPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button mode=\\\"md\\\" defaultHref=\\\"invoices\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"addProduct()\\\" mode=\\\"md\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"add\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Products</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-item lines=\\\"full\\\">\\n    <ion-grid>\\n        <ion-row>\\n            <ion-col size=\\\"5\\\" text-start><strong><small>Product Name</small></strong></ion-col>\\n            <ion-col size=\\\"4\\\" text-end><strong><small>Price (Rs.)</small></strong></ion-col>\\n            <ion-col size=\\\"3\\\" text-end><strong><small>Tax (%)</small></strong></ion-col>\\n            <!-- <ion-col size=\\\"2\\\" text-end><strong><small>Select</small></strong></ion-col> -->\\n          </ion-row>\\n    </ion-grid>\\n  </ion-item>\\n\\n  <ion-list>\\n    <ion-item-sliding *ngFor=\\\"let prod of _products\\\" #slidingItem>\\n      <ion-item mode=\\\"md\\\" lines=\\\"full\\\">\\n        <ion-label>\\n          <ion-grid>\\n              <ion-row>\\n                  <ion-col size=\\\"6\\\" text-start>{{ prod.name }}</ion-col>\\n                  <ion-col size=\\\"4\\\" text-end>{{ prod.price }}</ion-col>\\n                  <ion-col size=\\\"2\\\" text-end>{{ prod.tax }}%</ion-col>\\n              </ion-row>\\n          </ion-grid>\\n        </ion-label>\\n        <ion-checkbox slot=\\\"end\\\" mode=\\\"md\\\" (ionChange)=\\\"selectProduct($event, prod)\\\"></ion-checkbox>\\n      </ion-item>\\n      <ion-item-options side=\\\"end\\\">\\n        <ion-item-option color=\\\"warning\\\" (click)=\\\"showProductInfo(prod.id)\\\">\\n          <ion-icon name=\\\"alert\\\"></ion-icon>\\n        </ion-item-option>\\n        <ion-item-option color=\\\"primary\\\" (click)=\\\"updateProductInfo(prod)\\\">\\n          <ion-icon name=\\\"create\\\"></ion-icon>\\n        </ion-item-option>\\n        <ion-item-option color=\\\"danger\\\" (click)=\\\"deleteProduct(prod.id)\\\">\\n          <ion-icon name=\\\"trash\\\"></ion-icon>\\n        </ion-item-option>\\n      </ion-item-options>\\n    </ion-item-sliding>\\n  </ion-list>\\n\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-toolbar>\\n    <ion-button (click)=\\\"markedData()\\\" color=\\\"secondary\\\" expand=\\\"block\\\" position=\\\"bottom\\\">Update Invoice</ion-button>\\n  </ion-toolbar>\\n</ion-footer>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3Byb2R1Y3RzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { DatabaseProviderService } from '../services/database-provider.service';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { Product } from '../DATA_MODELS/product';\nimport { ToastController, IonItemSliding } from '@ionic/angular';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.page.html',\n  styleUrls: ['./products.page.scss'],\n})\nexport class ProductsPage implements OnInit {\n\n  @ViewChild('slidingItem') slideItem: IonItemSliding;\n  private _products = [];\n  private _selectedProduct = [];\n  \n  constructor(\n    private _DB: DatabaseProviderService,\n    private _router: Router, \n    private _TC: ToastController\n  ) { }\n\n  ngOnInit() {\n    this.loadProducts();\n    this._products.map((data) => {\n      data.hasSelected = false\n    })\n  }\n\n  // Load the Products from Database\n  loadProducts() {\n    this._DB.readAllProduct()\n      .then((data: any) => {\n        this._products = data;\n      }).catch(e => console.log(e))\n  }\n\n\n  // Select Product'/s and send to items Page in order to generate Invoice\n  selectProduct(ev: any, data) {\n    if(ev.target.checked === true) {\n      data.hasSelected = true\n    } else {\n      data.hasSelected = false\n    }\n    this._selectedProduct = this._products.filter((res) => {\n      if(res.hasSelected === true) {\n        return res;\n      } else {\n        return;\n      }\n    })\n  }\n\n  markedData() {\n    let dataToSend: NavigationExtras = {\n      state: {\n        data: this._selectedProduct\n      }\n    }\n    this._router.navigate(['/items'], dataToSend)\n  }\n\n  //<-------Start CRUD operation on DB ------------------>\n  // Add New Product into DB\n  addProduct() {\n    this._router.navigate(['/add-product']);\n  }\n\n  // Get the Single Product Information from DB\n  showProductInfo(product_id: string) {\n    this.slideItem.close();\n    let dataToSend: NavigationExtras = {\n      state: {\n        data: product_id\n      }\n    }\n    console.log(\"1. Data send from Products to Show Product Info: \", dataToSend)\n    this._router.navigate([`/products/${dataToSend.state.data}`], dataToSend)\n  }\n\n  // Update the Product Information into DB\n  updateProductInfo(prod: Product) {\n    this.slideItem.close();\n    let dataToSend: NavigationExtras = {\n      state: {\n        data: prod\n      }\n    }\n    console.log(\"2. Data send from Products to Update Product Info: \", dataToSend)\n    this._router.navigate([`/update-product/${dataToSend.state.data.product_id}`], dataToSend)\n  }\n\n  // Delete Product from DB\n  async deleteProduct(product_id: string) {\n    await this.slideItem.close();\n    await this.toastForDelete(product_id);\n  }\n  //<-------END of CRUD operation on DB ------------------>\n\n\n  // Perform Delete Operation Asynchronouslly\n  async toastForDelete(id) {\n    const toast = await this._TC.create({\n      header: 'Delete Product',\n      message: 'Are you sure to delete product ?',\n      position: 'middle',\n      buttons: [\n        {\n          text: 'Not Now',\n          handler: () => {\n            this.cancleToast();\n          }\n        }, {\n          text: 'Yes',\n          handler: () => {\n            this._DB.deleteProduct(id);\n            this.loadProducts();\n            this.deleteToast();\n          }\n        }\n      ]\n    })\n    toast.present();\n  };\n\n  async cancleToast() {\n    const cancle = await this._TC.create({\n      message: 'Product Not Deleted',\n      duration: 2000\n    });\n    cancle.present();\n  }\n\n  async deleteToast() {\n    const deleteIt = await this._TC.create({\n      message: 'Product Deleted Successfully',\n      duration: 2000\n    });\n    deleteIt.present();\n  }\n}\n"],"sourceRoot":""}