{"version":3,"sources":["webpack:///./src/app/items/items.module.ts","webpack:///./src/app/items/items.page.html","webpack:///./src/app/items/items.page.scss","webpack:///./src/app/items/items.page.ts"],"names":[],"mappings":"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","file":"items-items-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ItemsPage } from './items.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ItemsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ItemsPage]\n})\nexport class ItemsPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button mode=\\\"md\\\" defaultHref=\\\"invoices\\\"></ion-back-button>\\n    </ion-buttons>\\n      <ion-buttons slot=\\\"end\\\">\\n        <ion-button mode=\\\"md\\\" (click)=\\\"moreOptions($event)\\\">\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"more\\\"></ion-icon>\\n        </ion-button>\\n      </ion-buttons>\\n    <ion-title>Invoice Creation</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-item lines=\\\"full\\\">\\n    <ion-grid>\\n        <ion-row>\\n            <ion-col size=\\\"4\\\" text-start><strong><small>Product Name</small></strong></ion-col>\\n            <ion-col size=\\\"2\\\" text-end><strong><small>Qty.</small></strong></ion-col>\\n            <ion-col size=\\\"2\\\" text-end><strong><small>Price (Rs.)</small></strong></ion-col>\\n            <ion-col size=\\\"2\\\" text-end><strong><small>Tax (%)</small></strong></ion-col>\\n            <ion-col size=\\\"2\\\" text-end><strong><small>Total (Rs.)</small></strong></ion-col>\\n          </ion-row>\\n    </ion-grid>\\n  </ion-item>\\n\\n  <ion-list>\\n\\n    <ion-item-sliding *ngFor=\\\"let item of _dataFromProducts; let i=index;\\\">\\n\\n      <ion-item mode=\\\"md\\\" lines=\\\"full\\\">\\n        <ion-grid>\\n            <ion-row>\\n                <ion-col size=\\\"4\\\" text-start>{{item.product_name}}</ion-col>\\n                <ion-col size=\\\"2\\\" text-end>\\n                    <ion-input type=\\\"number\\\" [(ngModel)]=\\\"item.quantity\\\" (ionChange)=\\\"getQuantity($event, item, i)\\\" debounce=\\\"200\\\"></ion-input>\\n                </ion-col>\\n                <ion-col size=\\\"2\\\" text-end>{{item.product_price}}</ion-col>\\n                <ion-col size=\\\"2\\\" text-end>{{item.product_tax}}</ion-col>\\n                <ion-col size=\\\"2\\\" text-end>{{item.total}}</ion-col>\\n              </ion-row>\\n        </ion-grid>\\n      </ion-item>\\n\\n      <ion-item-options side=\\\"end\\\">\\n        <ion-item-option (click)=\\\"removeFromList()\\\">\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n        </ion-item-option>\\n      </ion-item-options>\\n\\n    </ion-item-sliding>\\n\\n  </ion-list>\\n\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-toolbar>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size=\\\"7\\\" text-start>\\n          <strong>Total Ammount: </strong>\\n        </ion-col>\\n        <ion-col size=\\\"5\\\" text-end>\\n          <strong>{{ billedAmt }}</strong>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col>\\n          <ion-button color=\\\"secondary\\\" expand=\\\"block\\\" (click)=\\\"generateNewInvoice()\\\">Generate Invoice</ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-toolbar>\\n</ion-footer>\"","module.exports = \"ion-content ion-list ion-item ion-row ion-col ion-input {\\n  border: 2px solid #959ba1;\\n  border-radius: 3px;\\n  width: 100%;\\n  height: 70%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kaGlyZW5kcmEvRGVza3RvcC9ERVYvdW52aXJlZC9zcWxpdGUtZGItaW9uaWMvc3JjL2FwcC9pdGVtcy9pdGVtcy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFNd0IseUJBQW9DO0VBQ3BDLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvaXRlbXMvaXRlbXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnQge1xuICAgIGlvbi1saXN0IHtcbiAgICAgICAgaW9uLWl0ZW0ge1xuICAgICAgICAgICAgaW9uLXJvdyB7XG4gICAgICAgICAgICAgICAgaW9uLWNvbCB7XG4gICAgICAgICAgICAgICAgICAgIGlvbi1pbnB1dCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCByZ2IoMTQ5LCAxNTUsIDE2MSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogNzAlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG5cbiAgICAgICAgICAgIH1cblxuICAgICAgICB9XG4gICAgfVxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { DatabaseProviderService } from '../services/database-provider.service';\nimport { PopoverController } from '@ionic/angular';\nimport { PopoverPage } from './popover/popover.page';\n\n@Component({\n  selector: 'app-items',\n  templateUrl: './items.page.html',\n  styleUrls: ['./items.page.scss'],\n})\nexport class ItemsPage implements OnInit {\n\n  private _dataFromProducts = null\n  totalNoOfItems: number\n  billedAmt: number\n  quantity: number\n  enteredQuantities = []\n  subTotal = []\n\n  constructor(\n    private _DB: DatabaseProviderService,\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _PC: PopoverController\n  ) {\n    this._route.queryParams.subscribe(params => {\n      if (this._router.getCurrentNavigation().extras.state) {\n        this._dataFromProducts = this._router.getCurrentNavigation().extras.state.data\n      }\n    })\n    this.billedAmt = 0\n  }\n\n  ngOnInit() {\n    this.totalNoOfItems = this._dataFromProducts.length\n  }\n\n  // Create PopOver to get more options for user\n  async moreOptions(ev: any) {\n    const popOver = await this._PC.create({\n      component: PopoverPage,\n      componentProps: { dataToSend: this._dataFromProducts },\n      event: ev,\n      animated: true,\n      translucent: true,\n      backdropDismiss: true,\n      showBackdrop: true\n    })\n    popOver.present();\n  }\n\n  // Get Quantity of Product from User\n  getQuantity(ev: any, itemObj, ind) {\n    for (let i = 0; i < this.totalNoOfItems; i++) {\n      if (ind === i) {\n        this.enteredQuantities[ind] = parseInt(ev.target.value)\n        this.quantity = this.enteredQuantities[ind]\n        if (isNaN(this.enteredQuantities[ind])) {\n          this.enteredQuantities[ind] = 0\n        }\n      }\n      itemObj.total = this.enteredQuantities[ind] * (itemObj.product_price + ((itemObj.product_tax / 100) * itemObj.product_price))\n      this.subTotal[ind] = itemObj.total\n    }\n\n    this.billedAmt = this.subTotal.reduce((a, b) => a + b)\n  }\n\n  // Remove invoice from item list shown over screen not from item table\n  removeFromList() {\n    console.log(\"Remove From List Button Clicked\")\n  }\n\n  // Generate New Invoice with updated billedAmt\n  generateNewInvoice() {\n    let dataToSendToInvoices: NavigationExtras = {\n      state: {\n        data: this.billedAmt\n      }\n    }\n    this._router.navigate(['/invoices'], dataToSendToInvoices)\n  }\n\n  // Generate A Unique ID\n  generateRandomID() {\n    let data = Math.random()\n    let id = data.toString(16).substring(2, 8)\n    return id\n  }\n}\n"],"sourceRoot":""}