{"version":3,"sources":["webpack:///./src/app/products/update-product/update-product.module.ts","webpack:///./src/app/products/update-product/update-product.page.html","webpack:///./src/app/products/update-product/update-product.page.scss","webpack:///./src/app/products/update-product/update-product.page.ts"],"names":[],"mappings":"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","file":"products-update-product-update-product-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UpdateProductPage } from './update-product.page';\n\n// For Material\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UpdateProductPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    MatFormFieldModule, \n    MatInputModule\n  ],\n  declarations: [UpdateProductPage]\n})\nexport class UpdateProductPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button mode=\\\"md\\\" defaultHref=\\\"products\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Update Product</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <form [formGroup]=\\\"updateProductForm\\\" (ngSubmit)=\\\"onUpdateProduct()\\\">\\n    \\n    <mat-form-field class=\\\"full-width\\\">\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Product Name\\\" formControlName=\\\"name\\\" required>\\n        <mat-error *ngFor=\\\"let validation of form_validation_messages.name\\\">\\n          <mat-error class=\\\"error-message\\\" *ngIf=\\\"updateProductForm.get('name').hasError(validation.type) && (updateProductForm.get('name').dirty || updateProductForm.get('name').touched)\\\">{{validation.message}}</mat-error>\\n        </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Price\\\" formControlName=\\\"price\\\" required>\\n        <mat-error *ngFor=\\\"let validation of form_validation_messages.price\\\">\\n          <mat-error class=\\\"error-message\\\" *ngIf=\\\"updateProductForm.get('price').hasError(validation.type) && (updateProductForm.get('price').dirty || updateProductForm.get('price').touched)\\\">{{validation.message}}</mat-error>\\n        </mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"full-width\\\">\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Tax\\\" formControlName=\\\"tax\\\" required>\\n        <mat-error *ngFor=\\\"let validation of form_validation_messages.tax\\\">\\n          <mat-error class=\\\"error-message\\\" *ngIf=\\\"updateProductForm.get('tax').hasError(validation.type) && (updateProductForm.get('tax').dirty || updateProductForm.get('tax').touched)\\\">{{validation.message}}</mat-error>\\n        </mat-error>\\n    </mat-form-field>\\n    \\n    <ion-button color=\\\"secondary\\\" margin-top expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"updateProductForm.invalid\\\">Update Product Info</ion-button>\\n  </form>\\n</ion-content>\\n\"","module.exports = \"form {\\n  display: flex;\\n  flex-direction: column; }\\n\\n.full-width {\\n  width: 100%; }\\n\\n.error-msg {\\n  color: red;\\n  display: block;\\n  position: absolute;\\n  font-size: 75%;\\n  bottom: -2em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kaGlyZW5kcmEvRGVza3RvcC9ERVYvdW52aXJlZC9zcWxpdGUtZGItaW9uaWMvc3JjL2FwcC9wcm9kdWN0cy91cGRhdGUtcHJvZHVjdC91cGRhdGUtcHJvZHVjdC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFhO0VBQ2Isc0JBQXNCLEVBQUE7O0FBRzFCO0VBQ0ksV0FBVyxFQUFBOztBQUdmO0VBQ0ksVUFBVTtFQUNWLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsY0FBYztFQUNkLFlBQVksRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3VwZGF0ZS1wcm9kdWN0L3VwZGF0ZS1wcm9kdWN0LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImZvcm0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLmZ1bGwtd2lkdGgge1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4uZXJyb3ItbXNnIHtcbiAgICBjb2xvcjogcmVkO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBmb250LXNpemU6IDc1JTtcbiAgICBib3R0b206IC0yZW07XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { DatabaseProviderService } from 'src/app/services/database-provider.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-update-product',\n  templateUrl: './update-product.page.html',\n  styleUrls: ['./update-product.page.scss'],\n})\nexport class UpdateProductPage implements OnInit {\n\n  private _recievedData = null\n  updateProductForm: FormGroup\n\n  form_validation_messages = {\n    'name': [\n      { type: 'required', message: 'Name is required' },\n      { type: 'pattern', message: 'Name contain only alphabets' },\n      { type: 'minlength', message: 'Name must be at least 3 characters long' },\n      { type: 'maxlength', message: 'Name cannot be more than 10 characters' }\n    ],\n    'price': [\n      { type: 'required', message: 'Price is required' },\n      { type: 'pattern', message: 'Price contain only numaric value' },\n      { type: 'minlength', message: 'Price must be at least 1 characters long' },\n      { type: 'maxlength', message: 'Price cannot be more than 4 characters' }\n    ],\n    'tax': [\n      { type: 'required', message: 'Tax is required' },\n      { type: 'pattern', message: 'Tax contain only numaric value' },\n      { type: 'minlength', message: 'Tax must be at least 1 characters long' },\n      { type: 'maxlength', message: 'Tax cannot be more than 3 characters' }\n    ]\n  }\n\n  constructor(\n    private _DB: DatabaseProviderService,\n    private _router: Router,\n    private _route: ActivatedRoute,\n    private _TC: ToastController,\n    private _FB: FormBuilder,\n  ) {\n    this._route.queryParams.subscribe(params => {\n      if (this._router.getCurrentNavigation().extras.state) {\n        this._recievedData = this._router.getCurrentNavigation().extras.state.data;\n        console.log(\"2. Nav enters with this data to Update Product Info: \", this._recievedData)\n      }\n    })\n  }\n\n  ngOnInit() {\n    this.updateProductForm = this._FB.group({\n      name: [this._recievedData.name, Validators.compose([\n        Validators.required,\n        Validators.pattern('[a-zA-Z][a-zA-Z ]+[a-zA-Z]$'),\n        Validators.minLength(3),\n        Validators.maxLength(10)\n      ])],\n      price: [this._recievedData.price, Validators.compose([\n        Validators.required,\n        Validators.pattern('^([0-9]*[1-9][0-9]*(\\.[0-9]+)?|[0]+\\.[0-9]*[1-9][0-9]*)$'),\n        Validators.minLength(1),\n        Validators.maxLength(4)\n      ])],\n      tax: [this._recievedData.tax, Validators.compose([\n        Validators.required,\n        Validators.pattern('^([0-9]*[1-9][0-9]*(\\.[0-9]+)?|[0]+\\.[0-9]*[1-9][0-9]*)$'),\n        Validators.minLength(1),\n        Validators.maxLength(3)\n      ])]\n    })\n  }\n\n  // Update Product Information\n  async onUpdateProduct() {\n    if (this.updateProductForm.valid) {\n      console.log(\"Nav enters with this data: \", this.updateProductForm.value)\n\n      var formData = {\n        'id': this._recievedData.id,\n        'name': this.updateProductForm.value.name,\n        'price': parseFloat(this.updateProductForm.value.price),\n        'tax': parseFloat(this.updateProductForm.value.tax)\n      }\n\n      console.log(\"Nav exits with this data: \", formData)\n\n      await this._DB.updateProductInfo(formData)\n        .then(() => {\n          this._router.navigate(['/products'])\n          this._DB.exportAsJSON()\n            .then((data) => console.log('Exported in JSON', data))\n        })\n    }\n\n  }\n\n}\n"],"sourceRoot":""}